<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
  PolicySchemaVersion="0.3.0.0" 
  TenantId="tenant.onmicrosoft.com" 
  PolicyId="B2C_1A_TrustFrameworkExtensions" 
  PublicPolicyUri="http://tenant.onmicrosoft.com/B2C_1A_TrustFrameworkExtensions">
  
  <BasePolicy>
    <TenantId>tenant.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkLocalization</PolicyId>
  </BasePolicy>
  <BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="userLanguage">
        <DisplayName>users current language</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="tempValue">
        <DisplayName>tempValue</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="extension_WicketUUID">
        <DisplayName>Wicket UUID</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>
    </ClaimsSchema>

    <!-- <ClaimsTransformations>
      <ClaimsTransformation Id="CopyEmailAddressToDisplayName" TransformationMethod="CopyClaim">
        <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim"/>
        </InputClaims>
        <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>
    </ClaimsTransformations> -->
  </BuildingBlocks>


  <ClaimsProviders>


    <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="AAD-Common">
          <DisplayName>Azure Active Directory</DisplayName>
          
          <Metadata>
            <Item Key="ApplicationObjectId">b2c-extensions-app_ApplicationObjectId</Item>
            <Item Key="ClientId">b2c-extensions-app_ClientId</Item>
          </Metadata>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-WriteWicketUUIDByObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="extension_WicketUUID" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_WicketUUID" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
         <TechnicalProfile Id="login-NonInteractive">
          <Metadata>
            <Item Key="client_id">ProxyIdentityExperienceFramework_ClientId</Item>
            <Item Key="IdTokenAudience">IdentityExperienceFramework_ClientId</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="client_id" DefaultValue="ProxyIdentityExperienceFramework_ClientId" />
            <InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="IdentityExperienceFramework_ClientId" />
          </InputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="login-NonInteractive" />
            <ValidationTechnicalProfile ReferenceId="REST-ProvisionWicket" />
            <ValidationTechnicalProfile ReferenceId="AAD-WriteWicketUUIDByObjectId" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>
      </TechnicalProfiles> 
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail-Wicket">
          <DisplayName>Email signup</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountsignup</Item>
            <Item Key="EnforceEmailVerification">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <OutputClaim ClaimTypeReferenceId="newUser" />

            <!-- Optional claims, to be collected from the user -->
            <!-- <OutputClaim ClaimTypeReferenceId="displayName" /> -->
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />
          </OutputClaims>
          <!-- <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CopyEmailAddressToDisplayName" />
          </OutputClaimsTransformations> -->
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-WicketSignupVerify" />
            <ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingLogonEmail" />
            <ValidationTechnicalProfile ReferenceId="REST-WicketSignupProvision" />
            <ValidationTechnicalProfile ReferenceId="AAD-WriteWicketUUIDByObjectId" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    

    <ClaimsProvider>
      <DisplayName>REST APIs</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="REST-ProvisionWicket">
          <DisplayName>Provision user in Wicket</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <!-- Set the ServiceUrl with your own REST API endpoint -->
            <Item Key="ServiceUrl">https://example-domain.ngrok.io/wicket/provision</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <!-- Set AuthenticationType to Basic or ClientCertificate in production environments -->
            <Item Key="AuthenticationType">None</Item>
            <!-- REMOVE the following line in production environments -->
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>

          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="email" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="objectId" />
            <InputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="givenName" />
            <InputClaim ClaimTypeReferenceId="surName" PartnerClaimType="surName" />
            <InputClaim ClaimTypeReferenceId="userLanguage" DefaultValue="{Culture:RFC5646}" AlwaysUseDefaultValue="true" />
          </InputClaims>

          <OutputClaims>
            <!-- Claims parsed from your REST API -->
            <!-- <OutputClaim ClaimTypeReferenceId="balance" /> -->
            <OutputClaim ClaimTypeReferenceId="extension_WicketUUID" PartnerClaimType="personUuid" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="REST-WicketSignupVerify">
          <DisplayName>Verify user signup in Wicket</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <!-- Set the ServiceUrl with your own REST API endpoint -->
            <Item Key="ServiceUrl">https://example-domain.ngrok.io/wicket/verify-signup</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <!-- Set AuthenticationType to Basic or ClientCertificate in production environments -->
            <Item Key="AuthenticationType">None</Item>
            <!-- REMOVE the following line in production environments -->
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>

          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
            <InputClaim ClaimTypeReferenceId="userLanguage" DefaultValue="{Culture:RFC5646}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="tempValue" DefaultValue="1" AlwaysUseDefaultValue="true" />
          </InputClaims>

          <OutputClaims>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="REST-WicketSignupProvision">
          <DisplayName>Provision user in Wicket</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <!-- Set the ServiceUrl with your own REST API endpoint -->
            <Item Key="ServiceUrl">https://example-domain.ngrok.io/wicket/provision</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <!-- Set AuthenticationType to Basic or ClientCertificate in production environments -->
            <Item Key="AuthenticationType">None</Item>
            <!-- REMOVE the following line in production environments -->
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>

          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="objectId" />
            <InputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="givenName" />
            <InputClaim ClaimTypeReferenceId="surName" PartnerClaimType="surName" />
            <InputClaim ClaimTypeReferenceId="userLanguage" DefaultValue="{Culture:RFC5646}" AlwaysUseDefaultValue="true" />
          </InputClaims>

          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_WicketUUID" PartnerClaimType="personUuid" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

  </ClaimsProviders>



  <UserJourneys>
    <UserJourney Id="SignUpOrSignIn">
      <OrchestrationSteps>
        <OrchestrationStep Order="2" Type="ClaimsExchange">
            <Preconditions>
              <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                <Value>objectId</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition>
            </Preconditions>
            <ClaimsExchanges>
              <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail-Wicket" />
            </ClaimsExchanges>
          </OrchestrationStep>
        </OrchestrationSteps>
      </UserJourney>
	</UserJourneys>

</TrustFrameworkPolicy>
